#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

aws:
  s3:
    # The AWS credentials provider type. support: AWSStaticCredentialsProvider, InstanceProfileCredentialsProvider
    # AWSStaticCredentialsProvider: use the access key and secret key to authenticate
    # InstanceProfileCredentialsProvider: use the IAM role to authenticate
    credentials.provider.type: AWSStaticCredentialsProvider
    access.key.id: accessKey123
    access.key.secret: secretKey123
    region: us-east-1
    bucket.name: dolphinscheduler
    endpoint: http://s3:9000
  emr:
    # The AWS credentials provider type. support: AWSStaticCredentialsProvider, InstanceProfileCredentialsProvider
    # AWSStaticCredentialsProvider: use the access key and secret key to authenticate
    # InstanceProfileCredentialsProvider: use the IAM role to authenticate
    credentials.provider.type: AWSStaticCredentialsProvider
    access.key.id: minioadmin
    access.key.secret: minioadmin
    region: cn-north-1
    endpoint: http://localhost:9000
  sagemaker:
    # The AWS credentials provider type. support: AWSStaticCredentialsProvider, InstanceProfileCredentialsProvider
    # AWSStaticCredentialsProvider: use the access key and secret key to authenticate
    # InstanceProfileCredentialsProvider: use the IAM role to authenticate
    credentials.provider.type: AWSStaticCredentialsProvider
    access.key.id: minioadmin
    access.key.secret: minioadmin
    region: cn-north-1
    endpoint: http://localhost:9000
  dms:
    # The AWS credentials provider type. support: AWSStaticCredentialsProvider, InstanceProfileCredentialsProvider
    # AWSStaticCredentialsProvider: use the access key and secret key to authenticate
    # InstanceProfileCredentialsProvider: use the IAM role to authenticate
    credentials.provider.type: AWSStaticCredentialsProvider
    access.key.id: minioadmin
    access.key.secret: minioadmin
    region: cn-north-1
    endpoint: http://localhost:9000
  datasync:
    # The AWS credentials provider type. support: AWSStaticCredentialsProvider, InstanceProfileCredentialsProvider
    # AWSStaticCredentialsProvider: use the access key and secret key to authenticate
    # InstanceProfileCredentialsProvider: use the IAM role to authenticate
    credentials.provider.type: AWSStaticCredentialsProvider
    access.key.id: minioadmin
    access.key.secret: minioadmin
    region: cn-north-1
    endpoint: http://localhost:9000

