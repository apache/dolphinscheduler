#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "dolphinscheduler.fullname" . }}-worker
  labels:
    {{- include "dolphinscheduler.worker.labels" . | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.worker.podManagementPolicy }}
  replicas: {{ .Values.worker.replicas }}
  selector:
    matchLabels:
      {{- include "dolphinscheduler.worker.labels" . | nindent 6 }}
  serviceName: {{ template "dolphinscheduler.fullname" . }}-worker-headless
  template:
    metadata:
      labels:
        {{- include "dolphinscheduler.worker.labels" . | nindent 8 }}
      {{- if .Values.worker.annotations }}
      annotations:
        {{- toYaml .Values.worker.annotations | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.worker.affinity }}
      affinity:
        {{- toYaml .Values.worker.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.worker.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.worker.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.worker.tolerations }}
      tolerations:
        {{- toYaml .Values.worker.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.image.pullSecret }}
      {{- end }}
      containers:
        - name: {{ include "dolphinscheduler.fullname" . }}-worker
          image: {{ include "dolphinscheduler.image.fullname" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "worker-server"
          ports:
            - containerPort: 1234
              name: "worker-port"
            - containerPort: 50051
              name: "logger-port"
          env:
            - name: TZ
              value: {{ .Values.timezone }}
            {{- include "dolphinscheduler.database.env_vars" . | nindent 12 }}
            {{- include "dolphinscheduler.zookeeper.env_vars" . | nindent 12 }}
            {{- include "dolphinscheduler.fs_s3a.env_vars" . | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ include "dolphinscheduler.fullname" . }}-common
            - configMapRef:
                name: {{ include "dolphinscheduler.fullname" . }}-worker
            - configMapRef:
                name: {{ include "dolphinscheduler.fullname" . }}-alert
          {{- if .Values.worker.resources }}
          resources:
            {{- toYaml .Values.worker.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.worker.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command: ["bash", "/root/checkpoint.sh", "WorkerServer"]
            initialDelaySeconds: {{ .Values.worker.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.worker.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.worker.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.worker.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.worker.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.worker.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command: ["bash", "/root/checkpoint.sh", "WorkerServer"]
            initialDelaySeconds: {{ .Values.worker.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.worker.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.worker.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.worker.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.worker.readinessProbe.failureThreshold }}
          {{- end }}
          volumeMounts:
            - mountPath: {{ default "/tmp/dolphinscheduler" .Values.common.configmap.DATA_BASEDIR_PATH | quote }}
              name: {{ include "dolphinscheduler.fullname" . }}-worker-data
            - mountPath: "/opt/dolphinscheduler/logs"
              name: {{ include "dolphinscheduler.fullname" . }}-worker-logs
            {{- include "dolphinscheduler.sharedStorage.volumeMount" . | nindent 12 }}
            {{- include "dolphinscheduler.fsFileResource.volumeMount" . | nindent 12 }}
      volumes:
        - name: {{ include "dolphinscheduler.fullname" . }}-worker-data
          {{- if .Values.worker.persistentVolumeClaim.dataPersistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "dolphinscheduler.fullname" . }}-worker-data
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: {{ include "dolphinscheduler.fullname" . }}-worker-logs
          {{- if .Values.worker.persistentVolumeClaim.logsPersistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "dolphinscheduler.fullname" . }}-worker-logs
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- include "dolphinscheduler.sharedStorage.volume" . | nindent 8 }}
        {{- include "dolphinscheduler.fsFileResource.volume" . | nindent 8 }}
  {{- if .Values.worker.persistentVolumeClaim.enabled }}
  volumeClaimTemplates:
    {{- if .Values.worker.persistentVolumeClaim.dataPersistentVolume.enabled }}
    - metadata:
        name: {{ include "dolphinscheduler.fullname" . }}-worker-data
        labels:
          app.kubernetes.io/name: {{ include "dolphinscheduler.fullname" . }}-worker-data
          app.kubernetes.io/instance: {{ .Release.Name }}
          app.kubernetes.io/managed-by: {{ .Release.Service }}
      spec:
        accessModes:
        {{- range .Values.worker.persistentVolumeClaim.dataPersistentVolume.accessModes }}
          - {{ . | quote }}
        {{- end }}
        storageClassName: {{ .Values.worker.persistentVolumeClaim.dataPersistentVolume.storageClassName | quote }}
        resources:
          requests:
            storage: {{ .Values.worker.persistentVolumeClaim.dataPersistentVolume.storage | quote }}
    {{- end }}
    {{- if .Values.worker.persistentVolumeClaim.logsPersistentVolume.enabled }}
    - metadata:
        name: {{ include "dolphinscheduler.fullname" . }}-worker-logs
        labels:
          app.kubernetes.io/name: {{ include "dolphinscheduler.fullname" . }}-worker-logs
          app.kubernetes.io/instance: {{ .Release.Name }}
          app.kubernetes.io/managed-by: {{ .Release.Service }}
      spec:
        accessModes:
        {{- range .Values.worker.persistentVolumeClaim.logsPersistentVolume.accessModes }}
          - {{ . | quote }}
        {{- end }}
        storageClassName: {{ .Values.worker.persistentVolumeClaim.logsPersistentVolume.storageClassName | quote }}
        resources:
          requests:
            storage: {{ .Values.worker.persistentVolumeClaim.logsPersistentVolume.storage | quote }}
    {{- end }}
  {{- end }}