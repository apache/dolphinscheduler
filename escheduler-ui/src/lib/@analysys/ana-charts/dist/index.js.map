{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ca1df5757df79eed1f10","webpack:///./src/common.js","webpack:///./src/packages/base.js","webpack:///./src/index.js","webpack:///external \"echarts\"","webpack:///./src/packages/line/index.js","webpack:///./src/packages/bar/index.js","webpack:///./src/packages/pie/index.js","webpack:///./src/packages/radar/index.js","webpack:///./src/packages/funnel/index.js","webpack:///./src/packages/scatter/index.js"],"names":["root","factory","exports","module","require","define","amd","a","i","self","this","__WEBPACK_EXTERNAL_MODULE_3__","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","init","Target","el","data","options","list","startsWith","document","getElementById","slice","getElementsByClassName","Error","HTMLElement","isPrototypeOf","Array","from","getChartContainers","settings","assign","charts","map","element","length","checkKeyInModel","model","_len","arguments","params","_key","_iterator","_isArray","isArray","_i","Symbol","iterator","_ref","next","done","value","key","Base","_this","_classCallCheck","transform","theme","echart","echarts","Chart","defaultTheme","window","addEventListener","resize","apply","setData","injectDataIntoSeries","series","forEach","index","item","_common","components","Line","Bar","Pie","Radar","Funnel","Scatter","config","registerTheme","default","toLowerCase","_loop","_base","_settings$data","undefined","keys","setMultipleLines","simple","setSingleLine","_settings","_settings$data2","_settings$keyMap","keyMap","xAxisKey","dataKey","_settings$title","title","type","xAxis","push","_settings2","_settings2$data","_settings2$keyMap","legendKey","_settings2$title","legendData","legendItem","xAxisItem","dataItem","includes","targetSeries","find","_options","_options$legendData","_settings$reverseAxis","reverseAxis","valueAxis","yAxisModel","xAxisModel","top","insertSeries","_series","setOption","text","tooltip","trigger","grid","left","right","bottom","containLabel","legend","yAxis","setMultipleBars","setSingleBar","lineTypes","timeline","timelineKey","lineTypeList","timelineOptions","axisType","autoPlay","playInterval","timelineItem","some","seriesType","targetOptions","_helpName","replace","_settings3","_settings3$reverseAxi","_settings3$stack","stack","set","label","normal","show","position","baseOption","x","_settings$ring","ring","textKey","radius","center","other","_objectWithoutProperties","_raw","formatter","orient","seriesData","indicator","textItem","radar","textStyle","color","backgroundColor","borderRadius","padding","width","min","max","minSize","maxSize","sort","gap","emphasis","fontSize","labelLine","lineStyle","itemStyle","borderColor","borderWidth","xKey","yKey","sizeKey","_data$i","xValue","yValue","sizeValue","textValue","symbolSize","Math","sqrt","param"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"echarts\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"echarts\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"echarts\")) : factory(root[\"echarts\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ca1df5757df79eed1f10","/**\n * 根据参数找到容器并初始化图表，然后返回一个或者一组图表实例\n * @param {*} Target 图表组件类\n * @param {*} el 选择器或者 DOM 对象\n * @param {*} data 数据源\n * @param {*} options 可选项\n */\nexport const init = (Target, el, data, options) => {\n  const list = getChartContainers(el)\n  const settings = Object.assign({}, { data }, options)\n  const charts = list.map(element => {\n    return new Target(element, settings)\n  })\n  return charts.length === 1 ? charts[0] : charts\n}\n\n/**\n * 统一图表容器为 DOM 元素数组\n * @param {*} el 选择器或者 DOM 对象\n */\nfunction getChartContainers (el) {\n  // 未传参数，直接返回\n  if (!el) {\n    return\n  }\n  if (typeof el === 'string') {\n    if (el.startsWith('#')) {\n      el = document.getElementById(el.slice(1))\n    } else if (el.startsWith('.')) {\n      el = document.getElementsByClassName(el.slice(1))\n    } else {\n      return\n    }\n  }\n  if (!el) {\n    throw new Error('找不到对应的dom对象！')\n  }\n  let list\n  if (HTMLElement.prototype.isPrototypeOf(el)) {\n    list = new Array(el)\n  } else {\n    list = Array.from(el)\n  }\n  if (!list) {\n    throw new Error('未找到对应的dom对象！')\n  }\n  return list\n}\n\n/**\n * 检测在指定对象中是否存在指定的属性名\n * @param {Object} model 待检测模型\n * @param  {...any} params 待检测属性名\n */\nexport const checkKeyInModel = (model, ...params) => {\n  for (const key of params) {\n    if (!model.hasOwnProperty(key)) {\n      throw new Error('数据格式错误！未找到指定属性：' + key)\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common.js","import echarts from 'echarts'\nimport Chart from '../index'\n\nexport default class Base {\n  constructor (element, settings) {\n    this.settings = settings\n    const options = this.transform()\n    if (options) {\n      this.options = options\n      if (settings.theme) {\n        // 使用已经注册的自定义主题\n        this.echart = echarts.init(element, settings.theme)\n      } else if (Chart.settings.defaultTheme) {\n        // 使用全局配置的主题\n        this.echart = echarts.init(element, Chart.settings.defaultTheme)\n      } else {\n        this.echart = echarts.init(element)\n      }\n      // 响应窗口 resize 事件\n      window.addEventListener('resize', () => this.echart.resize())\n      this.apply()\n    }\n  }\n\n  /**\n   * 刷新数据\n   * @param {*} data 图表数据\n   */\n  setData (data) {\n    if (data && data.length !== 0) {\n      this.settings.data = data\n      this.options = this.transform()\n      this.apply()\n    }\n  }\n\n  injectDataIntoSeries (data, series) {\n    data.forEach(o => {\n      if (o.index === 'all') {\n        delete o.index\n        series = series.map(item => {\n          return Object.assign({}, item, o)\n        })\n      } else if (o.index === 'start') {\n        delete o.index\n        series[0] = Object.assign({}, series[0], o)\n      } else if (o.index === 'end') {\n        delete o.index\n        series[series.length - 1] = Object.assign({}, series[series.length - 1], o)\n      } else if (Array.isArray(o.index)) {\n        for (const i of o.index) {\n          if (series[i]) {\n            series[i] = Object.assign({}, series[i], o)\n          }\n        }\n      }\n    })\n    return series\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/packages/base.js","import echarts from 'echarts'\n\nimport Line from './packages/line'\nimport Bar from './packages/bar'\nimport Pie from './packages/pie'\nimport Radar from './packages/radar'\nimport Funnel from './packages/funnel'\nimport Scatter from './packages/scatter'\nimport { checkKeyInModel, init } from './common'\n\nconst components = {\n  Line,\n  Bar,\n  Pie,\n  Radar,\n  Funnel,\n  Scatter\n}\n\nconst Chart = {\n  // 默认配置\n  settings: {},\n  /**\n   * 配置全局属性\n   * @param {Object} options 全局配置项\n   */\n  config (options) {\n    const { theme } = options\n    // 注册主题\n    if (theme) {\n      checkKeyInModel(theme, 'name', 'data')\n      echarts.registerTheme(theme.name, theme.data)\n      if (theme.default) {\n        Chart.settings.defaultTheme = theme.name\n      }\n    }\n  }\n}\n\n// 注入不同组件对应方法\nfor (const key in components) {\n  if (components.hasOwnProperty(key)) {\n    Chart[key.toLowerCase()] = (el, data, options) => {\n      return init(components[key], el, data, options)\n    }\n  }\n}\n\nexport {\n  Line,\n  Bar,\n  Pie,\n  Radar,\n  Funnel,\n  Scatter\n}\n\nexport default Chart\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"echarts\"\n// module id = 3\n// module chunks = 0","import Base from '../base'\nimport { checkKeyInModel, init } from '../../common'\n\nconst TYPE = 'line'\n\n/**\n * 折线图\n */\nexport default class Line extends Base {\n  /**\n   * 单独导出时调用的初始化方法\n   * @param {*} el 选择器或者 DOM 对象\n   * @param {*} data 数据源\n   * @param {*} options 可选项\n   */\n  static init (el, data, options) {\n    return init(Line, el, data, options)\n  }\n\n  /**\n   * 将用户配置转换为符合 ECharts API 格式的配置格式\n   */\n  transform () {\n    const { data = [] } = this.settings\n\n    if (data.length === 0) {\n      throw new Error('数据源为空！')\n    }\n\n    if (Object.keys(data[0]).length > 2) {\n      return this.setMultipleLines()\n    } else {\n      this.simple = true\n      return this.setSingleLine()\n    }\n  }\n\n  /**\n   * 单条折线\n   */\n  setSingleLine () {\n    const {\n      // 数据\n      data = [],\n      // 属性字典\n      keyMap = {\n        xAxisKey: 'key',\n        dataKey: 'value'\n      },\n      // 图表标题\n      title = '单条折线图'\n    } = this.settings\n\n    // x 轴对应属性名，数据值对应的属性名\n    const { xAxisKey, dataKey } = keyMap\n    checkKeyInModel(data[0], xAxisKey, dataKey)\n\n    const series = [{\n      type: TYPE,\n      data: []\n    }]\n    const xAxis = {\n      type: 'category',\n      data: []\n    }\n\n    for (let i = 0; i < data.length; i++) {\n      xAxis.data.push(data[i][xAxisKey])\n      series[0].data.push(data[i][dataKey])\n    }\n\n    return { title, xAxis, series }\n  }\n\n  /**\n   * 多条折线\n   */\n  setMultipleLines () {\n    const {\n      // 数据\n      data = [],\n      // 属性字典\n      keyMap = {\n        xAxisKey: 'key',\n        legendKey: 'typeName',\n        dataKey: 'value'\n      },\n      // 图表标题\n      title = '多条折线图'\n    } = this.settings\n\n    // x 轴对应属性名，图例对应的属性名，数据值对应的属性名\n    const { xAxisKey, legendKey, dataKey } = keyMap\n    checkKeyInModel(data[0], xAxisKey, legendKey, dataKey)\n\n    const legendData = []\n    const series = []\n    const xAxis = {\n      type: 'category',\n      data: []\n    }\n\n    for (let i = 0; i < data.length; i++) {\n      const legendItem = data[i][legendKey]\n      const xAxisItem = data[i][xAxisKey]\n      const dataItem = data[i][dataKey]\n\n      // 图例\n      if (!legendData.includes(legendItem)) {\n        legendData.push(legendItem)\n      }\n\n      // x 轴\n      if (!xAxis.data.includes(xAxisItem)) {\n        xAxis.data.push(xAxisItem)\n      }\n\n      // 系列\n      let targetSeries = series.find(s => s.name === legendItem)\n      if (!targetSeries) {\n        targetSeries = {\n          name: legendItem,\n          type: TYPE,\n          data: []\n        }\n        series.push(targetSeries)\n      }\n      targetSeries.data.push(dataItem)\n    }\n\n    return { title, xAxis, series, legendData }\n  }\n\n  /**\n   * 绘制图表\n   */\n  apply () {\n    const { title, xAxis, series, legendData = [] } = this.options\n    const {\n      // 是否为横向图\n      reverseAxis = false\n    } = this.settings\n    const valueAxis = { type: 'value' }\n    let yAxisModel = reverseAxis ? xAxis : valueAxis\n    let xAxisModel = reverseAxis ? valueAxis : xAxis\n    // 简单图表标题为空时，图表垂直居中\n    const top = !title && this.simple ? '3%' : 60\n\n    // 注入配置到series\n    let { insertSeries } = this.settings\n    let _series = series\n    if (insertSeries && insertSeries.length && series.length) {\n      _series = this.injectDataIntoSeries(insertSeries, _series)\n    }\n\n    this.echart.setOption({\n      title: {\n        text: title\n      },\n      tooltip: {\n        trigger: 'axis'\n      },\n      grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        top,\n        containLabel: true\n      },\n      legend: {\n        data: legendData\n      },\n      xAxis: xAxisModel,\n      yAxis: yAxisModel,\n      series: _series\n    }, true)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/packages/line/index.js","import Base from '../base'\nimport { checkKeyInModel, init } from '../../common'\n\nconst TYPE = 'bar'\n\n/**\n * 柱状图\n */\nexport default class Bar extends Base {\n  /**\n   * 单独导出时调用的初始化方法\n   * @param {*} el 选择器或者 DOM 对象\n   * @param {*} data 数据源\n   * @param {*} options 可选项\n   */\n  static init (el, data, options) {\n    return init(Bar, el, data, options)\n  }\n\n  /**\n   * 将用户配置转换为符合 ECharts API 格式的配置格式\n   */\n  transform () {\n    const { data = [] } = this.settings\n\n    if (data.length === 0) {\n      throw new Error('数据源为空！')\n    }\n\n    if (Object.keys(data[0]).length > 2) {\n      return this.setMultipleBars()\n    } else {\n      this.simple = true\n      return this.setSingleBar()\n    }\n  }\n\n  /**\n   * 单条柱\n   */\n  setSingleBar () {\n    const {\n      // 数据\n      data = [],\n      // 属性字典\n      keyMap = {\n        xAxisKey: 'key',\n        dataKey: 'value'\n      },\n      // 图表标题\n      title = '单条柱状图'\n    } = this.settings\n\n    // x 轴对应属性名，数据值对应的属性名\n    const { xAxisKey, dataKey } = keyMap\n    checkKeyInModel(data[0], xAxisKey, dataKey)\n\n    const series = [{\n      type: TYPE,\n      data: []\n    }]\n    const xAxis = {\n      type: 'category',\n      data: []\n    }\n\n    for (let i = 0; i < data.length; i++) {\n      xAxis.data.push(data[i][xAxisKey])\n      series[0].data.push(data[i][dataKey])\n    }\n\n    return { title, xAxis, series }\n  }\n\n  /**\n   * 多条柱\n   */\n  setMultipleBars () {\n    const {\n      // 数据\n      data = [],\n      // 属性字典\n      keyMap = {\n        xAxisKey: 'key',\n        legendKey: 'typeName',\n        dataKey: 'value'\n      },\n      // 图表标题\n      title = '多条柱状图',\n      // 折柱混合时，指定的折线数据索引\n      lineTypes\n    } = this.settings\n\n    // x 轴对应属性名，图例对应的属性名，数据值对应的属性名\n    const { xAxisKey, legendKey, dataKey } = keyMap\n    // 是否使用时间轴数据\n    const timeline = Object.keys(data[0]).length === 4\n    const timelineKey = keyMap.timelineKey || 'timeline'\n    if (timeline) {\n      checkKeyInModel(data[0], xAxisKey, legendKey, dataKey, timelineKey)\n    } else {\n      checkKeyInModel(data[0], xAxisKey, legendKey, dataKey)\n    }\n\n    // 规范折柱混合索引\n    let lineTypeList = []\n    if (lineTypes) {\n      if (!Array.isArray(lineTypes)) {\n        lineTypeList = [lineTypes]\n      } else {\n        lineTypeList = lineTypes\n      }\n    }\n\n    // 时间轴默认配置\n    const timelineOptions = {\n      timeline: {\n        axisType: 'category',\n        autoPlay: true,\n        playInterval: 1000,\n        data: []\n      },\n      options: []\n    }\n\n    // 初始值\n    const legendData = []\n    const series = []\n    const xAxis = {\n      type: 'category',\n      data: []\n    }\n    for (let i = 0; i < data.length; i++) {\n      const legendItem = data[i][legendKey]\n      const xAxisItem = data[i][xAxisKey]\n      const dataItem = data[i][dataKey]\n\n      // 图例\n      if (!legendData.includes(legendItem)) {\n        legendData.push(legendItem)\n      }\n\n      // x 轴\n      if (!xAxis.data.includes(xAxisItem)) {\n        xAxis.data.push(xAxisItem)\n      }\n\n      // 时间轴\n      if (timeline) {\n        const timelineItem = data[i][timelineKey]\n        // 设置时间轴 label\n        if (!timelineOptions.timeline.data.includes(timelineItem)) {\n          timelineOptions.timeline.data.push(timelineItem)\n        }\n        // 通用的系列配置\n        if (!series.some(s => s.name === legendItem)) {\n          let seriesType = TYPE\n          if (lineTypeList.length !== 0 && lineTypeList.includes(legendItem)) {\n            seriesType = 'line'\n          }\n          series.push({\n            name: legendItem,\n            type: seriesType\n          })\n        }\n        // 系列数据\n        let targetOptions = timelineOptions.options.find(o => o._helpName === timelineItem)\n        if (!targetOptions) {\n          // 初始化 option\n          targetOptions = {\n            _helpName: timelineItem,\n            title: { text: title.replace('$timeline', timelineItem) },\n            series: []\n          }\n          timelineOptions.options.push(targetOptions)\n        }\n        let targetSeries = targetOptions.series.find(d => d._helpName === legendItem)\n        if (!targetSeries) {\n          // 初始化系列数据\n          targetSeries = {\n            _helpName: legendItem,\n            data: []\n          }\n          targetOptions.series.push(targetSeries)\n        }\n        targetSeries.data.push(dataItem)\n      } else {\n        // 非时间轴数据处理\n        let targetSeries = series.find(s => s.name === legendItem)\n        if (!targetSeries) {\n          let seriesType = TYPE\n          if (lineTypeList.length !== 0 && lineTypeList.includes(legendItem)) {\n            seriesType = 'line'\n          }\n          targetSeries = {\n            name: legendItem,\n            type: seriesType,\n            data: []\n          }\n          series.push(targetSeries)\n        }\n        targetSeries.data.push(dataItem)\n      }\n    }\n\n    if (timeline) {\n      return { title, xAxis, series, legendData, timelineOptions }\n    }\n    return { title, xAxis, series, legendData }\n  }\n\n  /**\n   * 绘制图表\n   */\n  apply () {\n    const { title, xAxis, series, legendData, timelineOptions } = this.options\n    const {\n      // 是否为横向图\n      reverseAxis = false,\n      // 自定义 y 轴\n      yAxis,\n      // 是否为堆叠图\n      stack = false\n    } = this.settings\n    const valueAxis = { type: 'value' }\n    let yAxisModel = reverseAxis ? xAxis : valueAxis\n    let xAxisModel = reverseAxis ? valueAxis : xAxis\n    // 使用自定义 y 轴覆盖\n    if (yAxis) {\n      yAxisModel = yAxis\n    }\n    // 设置堆叠图\n    if (stack) {\n      series.forEach(set => {\n        set.stack = '总量'\n        set.label = {\n          normal: {\n            show: true,\n            position: reverseAxis ? 'insideRight' : 'insideTop'\n          }\n        }\n      })\n    }\n\n    // 注入配置到series\n    let { insertSeries } = this.settings\n    let _series = series\n    if (insertSeries && insertSeries.length && series.length) {\n      _series = this.injectDataIntoSeries(insertSeries, _series)\n    }\n\n    // 时间轴\n    if (timelineOptions) {\n      this.echart.setOption({\n        baseOption: {\n          timeline: timelineOptions.timeline,\n          tooltip: {\n            trigger: 'axis'\n          },\n          grid: {\n            top: 80,\n            bottom: 100,\n            containLabel: true\n          },\n          legend: {\n            x: 'right',\n            data: legendData\n          },\n          xAxis: xAxisModel,\n          yAxis: yAxisModel,\n          series: _series\n        },\n        options: timelineOptions.options\n      }, true)\n    } else {\n      // 简单图表标题为空时，图表垂直居中\n      const top = !title && this.simple ? '3%' : 60\n      this.echart.setOption({\n        title: {\n          text: title\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          top,\n          containLabel: true\n        },\n        legend: {\n          data: legendData\n        },\n        xAxis: xAxisModel,\n        yAxis: yAxisModel,\n        series: _series\n      }, true)\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/packages/bar/index.js","import Base from '../base'\nimport { checkKeyInModel, init } from '../../common'\n\nconst TYPE = 'pie'\n\n/**\n * 饼图\n */\nexport default class Pie extends Base {\n  /**\n   * 单独导出时调用的初始化方法\n   * @param {*} el 选择器或者 DOM 对象\n   * @param {*} data 数据源\n   * @param {*} options 可选项\n   */\n  static init (el, data, options) {\n    return init(Pie, el, data, options)\n  }\n\n  /**\n   * 将用户配置转换为符合 ECharts API 格式的配置格式\n   */\n  transform () {\n    const {\n      // 数据\n      data = [],\n      // 标题\n      title = '饼图',\n      // 是否环形图\n      ring = false,\n      // 属性字典\n      keyMap = {\n        textKey: 'key',\n        dataKey: 'value'\n      }\n    } = this.settings\n\n    if (data.length === 0) {\n      throw new Error('数据源为空！')\n    }\n\n    // 文本对应属性名，数据值对应的属性名\n    const { textKey, dataKey } = keyMap\n    checkKeyInModel(data[0], textKey, dataKey)\n\n    const legendData = []\n    let radius = ring ? ['50%', '70%'] : '60%'\n    let center = title ? ['50%', '60%'] : ['50%', '50%']\n    const series = [{\n      radius: radius,\n      center: center,\n      type: TYPE,\n      data: []\n    }]\n\n    // 填充数据\n    for (let i = 0; i < data.length; i++) {\n      const element = data[i]\n      const { [dataKey]: value, [textKey]: name, ...other } = element\n      const item = {\n        value,\n        name,\n        ...other,\n        _raw: element\n      }\n      series[0].data.push(item)\n    }\n    return { title, series, legendData }\n  }\n\n  /**\n   * 绘制图表\n   */\n  apply () {\n    let { title, series, legendData } = this.options\n\n    // 注入配置到series\n    let { insertSeries } = this.settings\n    let _series = series\n    if (insertSeries && insertSeries.length && series.length) {\n      _series = this.injectDataIntoSeries(insertSeries, _series)\n    }\n\n    this.echart.setOption({\n      title: {\n        text: title,\n        x: 'center'\n      },\n      tooltip: {\n        trigger: 'item',\n        formatter: '{b} : {c} ({d}%)'\n      },\n      legend: {\n        orient: 'vertical',\n        left: 'left',\n        data: legendData\n      },\n      series: _series\n    }, true)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/packages/pie/index.js","import Base from '../base'\nimport { checkKeyInModel, init } from '../../common'\n\nconst TYPE = 'radar'\n\n/**\n * 雷达图\n */\nexport default class Radar extends Base {\n  /**\n   * 单独导出时调用的初始化方法\n   * @param {*} el 选择器或者 DOM 对象\n   * @param {*} data 数据源\n   * @param {*} options 可选项\n   */\n  static init (el, data, options) {\n    return init(Radar, el, data, options)\n  }\n\n  /**\n   * 将用户配置转换为符合 ECharts API 格式的配置格式\n   */\n  transform () {\n    const {\n      // 数据\n      data = [],\n      // 图表标题\n      title = '雷达图',\n      // 属性字典\n      keyMap = {\n        textKey: 'key',\n        legendKey: 'typeName',\n        dataKey: 'value'\n      }\n    } = this.settings\n\n    if (data.length === 0) {\n      throw new Error('数据源为空！')\n    }\n\n    // 文本对应属性名，图例对应的属性名，数据值对应的属性名\n    const { textKey, legendKey, dataKey } = keyMap\n    checkKeyInModel(data[0], textKey, legendKey, dataKey)\n\n    const legendData = []\n    const seriesData = []\n    const indicator = []\n\n    // 设置图例并初始化数据系列\n    for (let i = 0; i < data.length; i++) {\n      const legendItem = data[i][legendKey]\n      const textItem = data[i][textKey]\n      const dataItem = data[i][dataKey]\n\n      // 图例\n      if (!legendData.includes(legendItem)) {\n        legendData.push(legendItem)\n      }\n\n      // 系列\n      let targetSeries = seriesData.find(s => s.name === legendItem)\n      if (!targetSeries) {\n        targetSeries = {\n          name: legendItem,\n          value: [],\n          _raw: []\n        }\n        seriesData.push(targetSeries)\n      }\n      targetSeries.value.push(dataItem)\n      targetSeries._raw.push(data[i])\n\n      // 指标\n      let targetIndicator = indicator.find(i => i.name === textItem)\n      if (!targetIndicator) {\n        indicator.push({ name: textItem })\n      }\n    }\n\n    return { title, seriesData, legendData, indicator }\n  }\n\n  /**\n   * 绘制图表\n   */\n  apply () {\n    const { title, seriesData, legendData = [], indicator } = this.options\n    this.echart.setOption({\n      title: {\n        text: title\n      },\n      tooltip: {},\n      legend: {\n        data: legendData\n      },\n      radar: {\n        name: {\n          textStyle: {\n            color: '#fff',\n            backgroundColor: '#999',\n            borderRadius: 3,\n            padding: [3, 5]\n          }\n        },\n        indicator\n      },\n      series: [{\n        type: TYPE,\n        data: seriesData\n      }]\n    }, true)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/packages/radar/index.js","import Base from '../base'\nimport { checkKeyInModel, init } from '../../common'\n\nconst TYPE = 'funnel'\n\n/**\n * 漏斗图\n */\nexport default class Funnel extends Base {\n  /**\n   * 单独导出时调用的初始化方法\n   * @param {*} el 选择器或者 DOM 对象\n   * @param {*} data 数据源\n   * @param {*} options 可选项\n   */\n  static init (el, data, options) {\n    return init(Funnel, el, data, options)\n  }\n\n  /**\n   * 将用户配置转换为符合 ECharts API 格式的配置格式\n   */\n  transform () {\n    const {\n      // 数据\n      data = [],\n      // 标题\n      title = '漏斗图',\n      // 属性字典\n      keyMap = {\n        textKey: 'key',\n        dataKey: 'value'\n      }\n    } = this.settings\n\n    if (data.length === 0) {\n      throw new Error('数据源为空！')\n    }\n\n    // 文本对应属性名，数据值对应的属性名\n    const { textKey, dataKey } = keyMap\n    checkKeyInModel(data[0], textKey, dataKey)\n\n    const legendData = []\n    const series = [{\n      type: TYPE,\n      left: '10%',\n      top: 60,\n      bottom: 60,\n      width: '80%',\n      min: 0,\n      max: 100,\n      minSize: '0%',\n      maxSize: '100%',\n      sort: 'descending',\n      gap: 2,\n      label: {\n        normal: {\n          show: true,\n          position: 'inside'\n        },\n        emphasis: {\n          textStyle: {\n            fontSize: 20\n          }\n        }\n      },\n      labelLine: {\n        normal: {\n          length: 10,\n          lineStyle: {\n            width: 1,\n            type: 'solid'\n          }\n        }\n      },\n      itemStyle: {\n        normal: {\n          borderColor: '#fff',\n          borderWidth: 1\n        }\n      },\n      data: []\n    }]\n\n    // 填充数据\n    for (let i = 0; i < data.length; i++) {\n      const element = data[i]\n      const { [dataKey]: value, [textKey]: name, ...other } = element\n      const item = {\n        value,\n        name,\n        ...other,\n        _raw: element\n      }\n      series[0].data.push(item)\n    }\n    return { title, series, legendData }\n  }\n\n  /**\n   * 绘制图表\n   */\n  apply () {\n    let { title, series, legendData } = this.options\n\n    // 注入配置到series\n    let { insertSeries } = this.settings\n    let _series = series\n    if (insertSeries && insertSeries.length && series.length) {\n      _series = this.injectDataIntoSeries(insertSeries, _series)\n    }\n\n    this.echart.setOption({\n      title: {\n        text: title\n      },\n      tooltip: {\n        trigger: 'item',\n        formatter: '{a} <br/>{b} : {c}%'\n      },\n      legend: {\n        data: legendData\n      },\n      series: _series\n    }, true)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/packages/funnel/index.js","import Base from '../base'\nimport { checkKeyInModel, init } from '../../common'\n\nconst TYPE = 'scatter'\n\n/**\n * 气泡图\n */\nexport default class Scatter extends Base {\n  /**\n   * 单独导出时调用的初始化方法\n   * @param {*} el 选择器或者 DOM 对象\n   * @param {*} data 数据源\n   * @param {*} options 可选项\n   */\n  static init (el, data, options) {\n    return init(Scatter, el, data, options)\n  }\n\n  /**\n   * 将用户配置转换为符合 ECharts API 格式的配置格式\n   */\n  transform () {\n    const {\n      // 数据\n      data = [],\n      // 图表标题\n      title = '气泡图',\n      // 属性字典\n      keyMap = {\n        xKey: 'x',\n        yKey: 'y',\n        sizeKey: 'size',\n        textKey: 'text',\n        legendKey: 'typeName'\n      }\n    } = this.settings\n\n    if (data.length === 0) {\n      throw new Error('数据源为空！')\n    }\n\n    const legendData = []\n    const series = []\n\n    const { xKey, yKey, sizeKey, textKey, legendKey } = keyMap\n    checkKeyInModel(data[0], xKey, yKey, sizeKey, textKey, legendKey)\n\n    for (let i = 0; i < data.length; i++) {\n      const {\n        [legendKey]: legendItem,\n        [xKey]: xValue,\n        [yKey]: yValue,\n        [sizeKey]: sizeValue,\n        [textKey]: textValue,\n        ...other\n      } = data[i]\n\n      // 图例\n      if (!legendData.includes(legendItem)) {\n        legendData.push(legendItem)\n      }\n\n      // 系列\n      let targetSeries = series.find(s => s.name === legendItem)\n      if (!targetSeries) {\n        targetSeries = {\n          type: TYPE,\n          name: legendItem,\n          data: [],\n          symbolSize: function (data) {\n            return Math.sqrt(data[2])\n          },\n          label: {\n            emphasis: {\n              show: true,\n              formatter: function (param) {\n                return param.data[3]\n              },\n              position: 'top'\n            }\n          }\n        }\n        series.push(targetSeries)\n      }\n      targetSeries.data.push({\n        value: [\n          xValue,\n          yValue,\n          sizeValue,\n          textValue\n        ],\n        ...other,\n        _raw: data[i]\n      })\n    }\n\n    return { title, series, legendData }\n  }\n\n  /**\n   * 绘制图表\n   */\n  apply () {\n    const { title, series, legendData = [] } = this.options\n\n    // 注入配置到series\n    let { insertSeries } = this.settings\n    let _series = series\n    if (insertSeries && insertSeries.length && series.length) {\n      _series = this.injectDataIntoSeries(insertSeries, _series)\n    }\n\n    this.echart.setOption({\n      title: {\n        text: title\n      },\n      legend: {\n        right: 10,\n        data: legendData\n      },\n      xAxis: {},\n      yAxis: {},\n      series: _series\n    }, true)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/packages/scatter/index.js"],"sourceRoot":""}