package org.apache.dolphinscheduler.remote.command;import org.apache.dolphinscheduler.remote.utils.FastJsonSerializer;import java.io.Serializable;import java.util.List;import java.util.concurrent.atomic.AtomicLong;/** * @Author: Tboy */public class ExecuteTaskRequestCommand implements Serializable {    private static final AtomicLong REQUEST = new AtomicLong(1);    private String taskId;    private String attemptId;    private String applicationName;    private String groupName;    private String taskName;    private int connectorPort;    private String description;    private String className;    private String methodName;    private String params;    private List<Integer> shardItems;    public List<Integer> getShardItems() {        return shardItems;    }    public void setShardItems(List<Integer> shardItems) {        this.shardItems = shardItems;    }    public String getParams() {        return params;    }    public void setParams(String params) {        this.params = params;    }    public String getTaskId() {        return taskId;    }    public void setTaskId(String taskId) {        this.taskId = taskId;    }    public String getApplicationName() {        return applicationName;    }    public void setApplicationName(String applicationName) {        this.applicationName = applicationName;    }    public String getGroupName() {        return groupName;    }    public void setGroupName(String groupName) {        this.groupName = groupName;    }    public String getTaskName() {        return taskName;    }    public void setTaskName(String taskName) {        this.taskName = taskName;    }    public int getConnectorPort() {        return connectorPort;    }    public void setConnectorPort(int connectorPort) {        this.connectorPort = connectorPort;    }    public String getDescription() {        return description;    }    public void setDescription(String description) {        this.description = description;    }    public String getClassName() {        return className;    }    public void setClassName(String className) {        this.className = className;    }    public String getMethodName() {        return methodName;    }    public void setMethodName(String methodName) {        this.methodName = methodName;    }    public Command convert2Command(){        Command command = new Command(REQUEST.getAndIncrement());        command.setType(CommandType.EXECUTE_TASK_REQUEST);        byte[] body = FastJsonSerializer.serialize(this);        command.setBody(body);        return command;    }}