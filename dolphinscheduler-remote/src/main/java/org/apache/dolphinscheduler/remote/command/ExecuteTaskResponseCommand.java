package org.apache.dolphinscheduler.remote.command;import org.apache.dolphinscheduler.remote.utils.FastJsonSerializer;import java.io.Serializable;import java.util.concurrent.atomic.AtomicLong;/** * @Author: Tboy */public class ExecuteTaskResponseCommand implements Serializable {    private static final AtomicLong REQUEST = new AtomicLong(1);    private String taskId;    private String attemptId;    private Object result;    private long receivedTime;    private int executeCount;    private long executeTime;    public String getAttemptId() {        return attemptId;    }    public void setAttemptId(String attemptId) {        this.attemptId = attemptId;    }    public String getTaskId() {        return taskId;    }    public void setTaskId(String taskId) {        this.taskId = taskId;    }    public Object getResult() {        return result;    }    public void setResult(Object result) {        this.result = result;    }    public long getReceivedTime() {        return receivedTime;    }    public void setReceivedTime(long receivedTime) {        this.receivedTime = receivedTime;    }    public int getExecuteCount() {        return executeCount;    }    public void setExecuteCount(int executeCount) {        this.executeCount = executeCount;    }    public long getExecuteTime() {        return executeTime;    }    public void setExecuteTime(long executeTime) {        this.executeTime = executeTime;    }    public Command convert2Command(){        Command command = new Command(REQUEST.getAndIncrement());        command.setType(CommandType.EXECUTE_TASK_RESPONSE);        byte[] body = FastJsonSerializer.serialize(this);        command.setBody(body);        return command;    }}