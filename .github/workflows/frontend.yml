#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Frontend

on:
  push:
    branches:
      - dev
    paths:
      - '.github/workflows/frontend.yml'
      - 'dolphinscheduler-ui/**'
  pull_request:

defaults:
  run:
    working-directory: dolphinscheduler-ui

concurrency:
  group: frontend-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  paths-filter:
    name: Frontend-Path-Filter
    runs-on: ubuntu-latest
    outputs:
      not-ignore: ${{ steps.filter.outputs.not-ignore }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721
        id: filter
        with:
          filters: |
            not-ignore:
              - '!(docs/**)'
  build:
    name: Build
    needs: paths-filter
    if: ${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - if: matrix.os == 'ubuntu-latest'
        name: Sanity Check
        uses: ./.github/actions/sanity-check
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Compile and Build on ${{ matrix.os }}
        run: |
          set -x
          npm install pnpm@7 -g
          pnpm install
          pnpm run lint
          pnpm run build:prod
  result:
    name: Frontend Build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [ build, paths-filter ]
    if: always()
    steps:
      - uses: actions/checkout@v2
      - name: Status
        run: |
          if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then
            echo "Skip Frontend Build!"
            exit 0
          fi
          if [[ ${{ needs.build.result }} != 'success' ]]; then
            echo "Frontend Build Failed!"
            exit -1
          fi
