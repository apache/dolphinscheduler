#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
spring:
  profiles:
    active: postgresql
  banner:
    charset: UTF-8
  jackson:
    time-zone: UTC
    date-format: "yyyy-MM-dd HH:mm:ss"
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://127.0.0.1:5432/dolphinscheduler
    username: root
    password: root
    hikari:
      connection-test-query: select 1
      pool-name: DolphinScheduler
  quartz:
    job-store-type: jdbc
    jdbc:
      initialize-schema: never
    properties:
      org.quartz.threadPool.threadPriority: 5
      org.quartz.jobStore.isClustered: true
      org.quartz.jobStore.class: org.springframework.scheduling.quartz.LocalDataSourceJobStore
      org.quartz.scheduler.instanceId: AUTO
      org.quartz.jobStore.tablePrefix: QRTZ_
      org.quartz.jobStore.acquireTriggersWithinLock: true
      org.quartz.scheduler.instanceName: DolphinScheduler
      org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool
      org.quartz.jobStore.useProperties: false
      org.quartz.threadPool.makeThreadsDaemons: true
      org.quartz.threadPool.threadCount: 25
      org.quartz.jobStore.misfireThreshold: 60000
      org.quartz.scheduler.batchTriggerAcquisitionMaxCount: 1
      org.quartz.scheduler.makeSchedulerThreadDaemon: true
      org.quartz.jobStore.driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
      org.quartz.jobStore.clusterCheckinInterval: 5000
  cloud.discovery.client.composite-indicator.enabled: false

# Mybatis-plus configuration, you don't need to change it
mybatis-plus:
  mapper-locations: classpath:org/apache/dolphinscheduler/dao/mapper/*Mapper.xml
  type-aliases-package: org.apache.dolphinscheduler.dao.entity
  configuration:
    cache-enabled: false
    call-setters-on-nulls: true
    map-underscore-to-camel-case: true
    jdbc-type-for-null: NULL
  global-config:
    db-config:
      id-type: auto
    banner: false


registry:
  type: zookeeper
  zookeeper:
    namespace: dolphinscheduler
    connect-string: localhost:2181
    retry-policy:
      base-sleep-time: 1s
      max-sleep: 3s
      max-retries: 5
    session-timeout: 60s
    connection-timeout: 15s
    block-until-connected: 15s
    digest: ~

master:
  listen-port: 5678
  # master prepare execute thread number to limit handle commands in parallel
  pre-exec-threads: 10
  # master execute thread number to limit process instances in parallel
  exec-threads: 100
  # master heartbeat interval
  max-heartbeat-interval: 10s
  # master commit task retry times
  task-commit-retry-times: 5
  # master commit task interval
  task-commit-interval: 1s
  state-wheel-interval: 5s
  server-load-protection:
    # If set true, will open master overload protection
    enabled: true
    # Master max system cpu usage, when the master's system cpu usage is smaller then this value, master server can execute workflow.
    max-system-cpu-usage-percentage-thresholds: 0.7
    # Master max jvm cpu usage, when the master's jvm cpu usage is smaller then this value, master server can execute workflow.
    max-jvm-cpu-usage-percentage-thresholds: 0.7
    # Master max System memory usage , when the master's system memory usage is smaller then this value, master server can execute workflow.
    max-system-memory-usage-percentage-thresholds: 0.7
    # Master max disk usage , when the master's disk usage is smaller then this value, master server can execute workflow.
    max-disk-usage-percentage-thresholds: 0.7
  # failover interval, the unit is minute
  failover-interval: 10m
  # kill yarn / k8s application when failover taskInstance, default true
  kill-application-when-task-failover: true
  registry-disconnect-strategy:
    # The disconnect strategy: stop, waiting
    strategy: stop
  worker-group-refresh-interval: 10s
  command-fetch-strategy:
    type: ID_SLOT_BASED
    config:
      # The incremental id step
      id-step: 1
      # master fetch command num
      fetch-size: 10
  worker-load-balancer-configuration-properties:
    # RANDOM, ROUND_ROBIN, FIXED_WEIGHTED_ROUND_ROBIN, DYNAMIC_WEIGHTED_ROUND_ROBIN
    type: DYNAMIC_WEIGHTED_ROUND_ROBIN
    # dynamic-weight-config-properties only used in DYNAMIC_WEIGHTED_ROUND_ROBIN, the weight of memory-usage, cpu-usage, task-thread-pool-usage should sum to 100.
    dynamic-weight-config-properties:
      memory-usage-weight: 30
      cpu-usage-weight: 30
      task-thread-pool-usage-weight: 40

server:
  port: 5679

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus
  endpoint:
    health:
      enabled: true
      show-details: always
  health:
    db:
      enabled: true
    defaults:
      enabled: false
  metrics:
    tags:
      application: ${spring.application.name}

metrics:
  enabled: true

# Override by profile

---
spring:
  config:
    activate:
      on-profile: mysql
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/dolphinscheduler
    username: root
    password: root
  quartz:
    properties:
      org.quartz.jobStore.driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
